package com.yuralil.application.form;

import com.yuralil.domain.dao.UsersDao;
import com.yuralil.infrastructure.util.Session;
import com.yuralil.domain.security.HashUtil;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.*;
import javafx.scene.layout.VBox;

/**
 * –§–æ—Ä–º–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: –∑–º—ñ–Ω–∞ –ø–∞—Ä–æ–ª—è, –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –≥–æ—Å—Ç–µ–π.
 */
public class SettingsForm extends VBox {

    public SettingsForm() {
        setSpacing(20);
        setPadding(new Insets(30));
        setAlignment(Pos.CENTER);

        if (Session.getCurrentUser() == null) {
            Label guestMsg = new Label("üîí –£–≤—ñ–π–¥—ñ—Ç—å, —â–æ–± –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è.");
            guestMsg.setStyle("-fx-font-size: 16px; -fx-text-fill: #666;");
            getChildren().add(guestMsg);
        } else {
            getChildren().add(createPasswordSection());
        }
    }

    private VBox createPasswordSection() {
        VBox box = new VBox(10);
        box.setPadding(new Insets(10));

        Label title = new Label("üîí –ó–º—ñ–Ω–∞ –ø–∞—Ä–æ–ª—è");
        title.setStyle("-fx-font-size: 18px; -fx-font-weight: bold;");

        PasswordField currentPasswordField = new PasswordField();
        currentPasswordField.setPromptText("–°—Ç–∞—Ä–∏–π –ø–∞—Ä–æ–ª—å");

        PasswordField newPasswordField = new PasswordField();
        newPasswordField.setPromptText("–ù–æ–≤–∏–π –ø–∞—Ä–æ–ª—å");

        PasswordField confirmPasswordField = new PasswordField();
        confirmPasswordField.setPromptText("–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å");

        Button changeBtn = new Button("–ó–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–æ–ª—å");
        Label status = new Label();

        changeBtn.setOnAction(e -> {
            String oldPass = currentPasswordField.getText();
            String newPass = newPasswordField.getText();
            String confirm = confirmPasswordField.getText();

            var user = Session.getCurrentUser();
            String hashedOld = HashUtil.hash(oldPass);

            if (!user.getPassword().equals(hashedOld)) {
                status.setText("‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Å—Ç–∞—Ä–∏–π –ø–∞—Ä–æ–ª—å");
            } else if (!newPass.equals(confirm)) {
                status.setText("‚ùå –ü–∞—Ä–æ–ª—ñ –Ω–µ –∑–±—ñ–≥–∞—é—Ç—å—Å—è");
            } else if (newPass.length() < 6) {
                status.setText("‚ùå –ü–∞—Ä–æ–ª—å –º–∞—î –±—É—Ç–∏ –º—ñ–Ω—ñ–º—É–º 6 —Å–∏–º–≤–æ–ª—ñ–≤");
            } else {
                try {
                    String hashedNew = HashUtil.hash(newPass);
                    user.setPassword(hashedNew);
                    UsersDao.getInstance().updatePassword(user.getId(), hashedNew);
                    status.setText("‚úÖ –ü–∞—Ä–æ–ª—å –∑–º—ñ–Ω–µ–Ω–æ");
                } catch (Exception ex) {
                    status.setText("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –ø–∞—Ä–æ–ª—è");
                    ex.printStackTrace();
                }
            }
        });

        box.getChildren().addAll(
                title,
                currentPasswordField,
                newPasswordField,
                confirmPasswordField,
                changeBtn,
                status
        );
        return box;
    }
}
